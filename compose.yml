networks:
  usmile:
    driver: bridge

services:
  bot:
    container_name: usmile
    image: coder80/usmile:latest
    env_file: .env
    profiles:
      - prod
    networks:
      - usmile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./certs:/usr/src/app/certs

  bot-dev:
    container_name: usmile-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file: .env
    profiles:
      - dev
    networks:
      - usmile
    volumes:
      - ./src:/usr/src/app/src
      - ./certs:/usr/src/app/certs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:17.4-alpine
    container_name: usmile-postgres
    networks:
      - usmile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: usmile
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --username=$$POSTGRES_USER --dbname usmile
      start_period: 10s
      start_interval: 1s

  redis:
    image: redis:7.4.2-alpine
    container_name: usmile-redis
    networks:
      - usmile
    volumes:
      - ./redis_data:/data
    profiles:
      - dev
      - prod
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      start_period: 10s
      start_interval: 1s
